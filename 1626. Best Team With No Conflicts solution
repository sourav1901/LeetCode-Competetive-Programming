class Solution1626 {
    public int bestTeamScore(int[] scores, int[] ages) {
        List<pair> l = new ArrayList<>();
        for( int i=0;i<ages.length;i++) l.add(new pair(ages[i],scores[i]));
        
        Collections.sort(l,(p1,p2)->{
            return (p1.ages==p2.ages?p1.scores-p2.scores:p1.ages-p2.ages);
        });
        int[] dp = new int[ages.length];
        dp[0]=l.get(0).scores;
        int max =dp[0];
        for(int i=1;i<ages.length;i++){
            dp[i]=l.get(i).scores;
            for(int j=0;j<i;j++){
                if(l.get(i).scores>=l.get(j).scores)
                    dp[i]=Math.max(dp[i],dp[j]+l.get(i).scores);
            }
            max= Math.max(max,dp[i]);
        }
        return max;
    }
    
}
class pair{
    int ages;
    int scores;
    public pair(int ages , int scores){
        this.ages = ages;
        this.scores=scores;
    }
    
}
